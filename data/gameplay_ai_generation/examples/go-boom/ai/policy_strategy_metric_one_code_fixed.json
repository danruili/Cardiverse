{
    "game_description": "### The Pack\n\nThe standard 52-card pack is used.\n\n### Object of the Game\n\nThe goal is to be the first player to get rid of all the cards in the player\u2019s hand.\n\n### Card Values/scoring\n\nThe first player to get rid of all of their cards wins the game. The winner collects from each other player the pip value of the cards remaining in that player\u2019s hand. Aces count 1 point each, face cards count 10 points each, and other cards count their pip value.\n\n### The Deal\n\nDeal seven cards to each player, one at a time, starting with the player to the left. The remainder of the pack is placed face down in the center of the table to form the stock.\n\n### The Play\n\nThe player to the left of the dealer leads and may play any card. Each player in turn must either follow suit or play a card of the same rank as the card lead.\n\nExample: If the jack of diamonds is lead, each player must play a diamond or any jack.\n\nIf a player cannot follow suit or play a card of the same rank, the player must draw from the stock until a play can be made. When the stock is exhausted and the player cannot play, the player simply does not play to the trick.\n\nThe highest card of the suit lead wins each trick.\u00a0The winner of each trick leads next.",
    "input_description": "Example: \n{\"common\": {\"num_players\": 4, \"current_player\": 2, \"winner\": null, \"is_over\": false, \"facedown_cards\": {\"deck_size\": 24}, \"faceup_cards\": {\"trick\": [{\"rank\": \"A\", \"suit\": \"clubs\"}, {\"rank\": \"4\", \"suit\": \"clubs\"}], \"lead_card\": {\"rank\": \"A\", \"suit\": \"clubs\"}}}, \"players\": [{\"public\": {\"played_cards\": [{\"rank\": \"J\", \"suit\": \"diamonds\"}, {\"rank\": \"A\", \"suit\": \"clubs\"}]}, \"facedown_cards\": {\"hand_size\": 5}, \"faceup_cards\": {}}, {\"public\": {\"played_cards\": [{\"rank\": \"A\", \"suit\": \"diamonds\"}, {\"rank\": \"4\", \"suit\": \"clubs\"}]}, \"facedown_cards\": {\"hand_size\": 5}, \"faceup_cards\": {}}, {\"public\": {\"played_cards\": [{\"rank\": \"K\", \"suit\": \"diamonds\"}], \"current_player\": true}, \"private\": {}, \"facedown_cards\": {\"hand\": [{\"rank\": \"A\", \"suit\": \"spades\"}, {\"rank\": \"J\", \"suit\": \"spades\"}, {\"rank\": \"4\", \"suit\": \"spades\"}, {\"rank\": \"7\", \"suit\": \"hearts\"}, {\"rank\": \"10\", \"suit\": \"hearts\"}, {\"rank\": \"6\", \"suit\": \"hearts\"}]}, \"faceup_cards\": {}}, {\"public\": {\"played_cards\": [{\"rank\": \"3\", \"suit\": \"diamonds\"}]}, \"facedown_cards\": {\"hand_size\": 6}, \"faceup_cards\": {}}], \"recent_history\": [{\"type\": \"action\", \"player_id\": 2, \"action\": {\"action\": \"play\", \"args\": {\"card\": {\"rank\": \"K\", \"suit\": \"diamonds\"}}, \"id\": 0}, \"msg\": \"Player 2 decides to: play-(card: K-diamonds)\"}, {\"type\": \"info\", \"msg\": \"Player 2 plays K-diamonds\", \"role\": null}, {\"type\": \"turn_end\", \"player_id\": 2, \"msg\": \"---------- End of Player 2's turn ----------\"}, {\"type\": \"action\", \"player_id\": 3, \"action\": {\"action\": \"play\", \"args\": {\"card\": {\"rank\": \"3\", \"suit\": \"diamonds\"}}, \"id\": 0}, \"msg\": \"Player 3 decides to: play-(card: 3-diamonds)\"}, {\"type\": \"info\", \"msg\": \"Player 3 plays 3-diamonds\", \"role\": null}, {\"type\": \"info\", \"msg\": \"Trick resolved. Player 3 wins the trick.\", \"role\": null}, {\"type\": \"turn_end\", \"player_id\": 3, \"msg\": \"---------- End of Player 3's turn ----------\"}, {\"type\": \"action\", \"player_id\": 0, \"action\": {\"action\": \"play\", \"args\": {\"card\": {\"rank\": \"A\", \"suit\": \"clubs\"}}, \"id\": 1}, \"msg\": \"Player 0 decides to: play-(card: A-clubs)\"}, {\"type\": \"info\", \"msg\": \"Player 0 plays A-clubs\", \"role\": null}, {\"type\": \"info\", \"msg\": \"A-clubs is the lead card of this trick.\", \"role\": null}, {\"type\": \"turn_end\", \"player_id\": 0, \"msg\": \"---------- End of Player 0's turn ----------\"}, {\"type\": \"action\", \"player_id\": 1, \"action\": {\"action\": \"play\", \"args\": {\"card\": {\"rank\": \"4\", \"suit\": \"clubs\"}}, \"id\": 0}, \"msg\": \"Player 1 decides to: play-(card: 4-clubs)\"}, {\"type\": \"info\", \"msg\": \"Player 1 plays 4-clubs\", \"role\": null}], \"legal_actions\": [{\"action\": \"play\", \"args\": {\"card\": {\"rank\": \"A\", \"suit\": \"spades\"}}, \"id\": 0}]}\n\nExplanation: \n{\"common\": {\"num_players\": \"The number of players participating in the game. This is set to 4 in this game instance.\", \"current_player\": \"The index of the player whose turn it is to act. Currently, it is player 2's turn.\", \"winner\": \"The index of the winning player if the game is over; otherwise, it is null.\", \"is_over\": \"A boolean indicating whether the game is over. Set to false as the game is still ongoing.\", \"facedown_cards\": {\"deck_size\": \"The number of cards remaining in the deck that have not been drawn or dealt. There are 24 cards left.\"}, \"faceup_cards\": {\"trick\": \"A list of cards that have been played in the current trick. The cards include 'A of clubs' and '4 of clubs' in the current trick.\", \"lead_card\": \"The card that led the current trick. It is 'A of clubs'.\"}}, \"players\": [{\"public\": {\"played_cards\": \"A list of cards that the player has played publicly. For player 0, these are 'J of diamonds' and 'A of clubs'.\"}, \"facedown_cards\": {\"hand_size\": \"The number of cards in the player's hand that are not visible to others. Player 0 has 5 cards.\"}}, {\"public\": {\"played_cards\": \"Player 1's publicly played cards: 'A of diamonds' and '4 of clubs'.\"}, \"facedown_cards\": {\"hand_size\": \"Player 1 has 5 cards in their hand.\"}}, {\"public\": {\"played_cards\": \"Player 2 has played 'K of diamonds'.\"}, \"current_player\": \"A boolean indicating that this player, player 2, is the current player.\", \"facedown_cards\": {\"hand\": \"A list of cards that player 2 possesses but are not visible to others, which include: 'A of spades', 'J of spades', '4 of spades', '7 of hearts', '10 of hearts', and '6 of hearts'.\"}}, {\"public\": {\"played_cards\": \"Player 3 has played '3 of diamonds'.\"}, \"facedown_cards\": {\"hand_size\": \"Player 3 has 6 cards in their hand.\"}}], \"recent_history\": \"A list of recent actions or events in the game, including the player who acted, the action type (play, info, turn end), and details about each action. This includes actions like plays of specific cards and resolution of tricks.\", \"legal_actions\": [{\"action\": \"play\", \"args\": {\"card\": \"The card that player 2 can legally play next based on the game rules. It specifies 'A of spades' as a valid play.\"}}]}",
    "policy_list": [
        "**Hand Diversity Score**\nMeasures how diverse the hand is in terms of suits and ranks. A more diverse hand provides more flexibility in following suits or playing high cards of the same rank, which can increase the chance of winning a trick. The score decreases as the hand becomes more homogenized in suit or reliant on specific ranks.\n**Winning Potential**\nEvaluates the potential to win the current trick based on the highest card of the led suit or matching rank available in hand. Higher values are assigned when the player holds the highest or near-highest cards of the current suit or matching ranks, indicating a greater chance of winning the trick.\n**Risk of Drawing Penalty**\nAssesses the likelihood and potential cost of needing to draw from the stock before being able to play. Factors include current hand suit distribution and remaining stock size. A high value indicates a greater risk of drawing, thus delaying the chance to play cards and decreasing the likelihood of winning the game quickly.\n**Lead Control Value**\nDetermines the strategic advantage gained by leading the next trick. Evaluates the current hand's capability to take control by winning the trick and thereby allowing the selection of a beneficial suit or rank for the next round. The value is higher when the player has cards that can be well-utilized to set up favorable subsequent plays.\n**Play High Cards Early**\nWhen following suit or playing the same rank, prioritize playing high-value cards, especially face cards. This can reduce your point count faster in case others win tricks.\n**Lead with Diverse Suits When Winning**\nWhen leading a trick after winning the previous one, choose a suit that hasn't been played much or at all yet. This can force other players to draw from the stock if they cannot follow.\n**Track Played Cards**\nKeep a mental note or simple tracking of the cards that have already been played. Use this information to make tactical decisions on which cards to play or lead.\n**Delay Playing Aces**\nKeep Aces in your hand until there\u2019s significant progress in the game with reduced stock and played cards. Use them to win crucial tricks later in the game when players have fewer cards."
    ],
    "code": [
        "\ndef score(state: dict, action: dict) -> float:\n    def card_value(card):\n        if card['rank'] in ['J', 'Q', 'K']:\n            return 10\n        elif card['rank'] == 'A':\n            return 1\n        else:\n            return int(card['rank'])\n\n    def hand_diversity(hand):\n        suits = set(card['suit'] for card in hand)\n        ranks = set(card['rank'] for card in hand)\n        return (len(suits) + len(ranks)) / (len(hand) + 1)\n\n    def winning_potential(hand, lead_card, trick):\n        potential = 0\n        if lead_card:\n            lead_suit = lead_card['suit']\n            lead_rank = card_value(lead_card)\n            for card in hand:\n                if card['suit'] == lead_suit:\n                    potential = max(potential, card_value(card) / 14)  # Normalizing to [0, 1]\n                elif card['rank'] == lead_card['rank']:\n                    potential = max(potential, card_value(card) / 14)\n        else:\n            # If there is no lead card, consider high cards for their potential value\n            for card in hand:\n                potential = max(potential, card_value(card) / 14)\n        return potential\n\n    def risk_of_drawing(hand, deck_size):\n        suits_in_hand = set(card['suit'] for card in hand)\n        num_missing_suits = 4 - len(suits_in_hand)\n        return min(num_missing_suits / 4, deck_size / 52)\n\n    def lead_control_value(winning_potential):\n        return winning_potential\n\n    current_player_index = state['common']['current_player']\n    current_player_hand = state['players'][current_player_index]['facedown_cards']['hand']\n    deck_size = state['common']['facedown_cards']['deck_size']\n    lead_card = state['common']['faceup_cards']['lead_card']\n    trick_cards = state['common']['faceup_cards']['trick']\n\n    # Evaluate the action\n    action_card = None\n    if 'args' in action and 'card' in action['args']:\n        action_card = action['args']['card']\n\n    # Policy evaluations\n    diversity_score = hand_diversity(current_player_hand)\n    winning_potential_score = winning_potential(current_player_hand, lead_card, trick_cards)\n    risk_score = risk_of_drawing(current_player_hand, deck_size)\n    lead_control_score = lead_control_value(winning_potential_score)\n\n    # Calculate the resulting score\n    result_score = (0.25 * diversity_score \n                    + 0.35 * winning_potential_score \n                    - 0.15 * risk_score \n                    + 0.25 * lead_control_score)\n\n    return min(max(result_score, 0), 1)\n\n# Example Usage:\n# score(state, {\"action\": \"play\", \"args\": {\"card\": {\"rank\": \"A\", \"suit\": \"spades\"}}})\n"
    ]
}