{
    "game_description": "### 1. **Game State**\n\n#### **Common Information:**\n- **Energy Pool:** Total mana chips contributed by all players, representing communal magical energy.\n- **Sacred Board:** Displays all runes (cards) played, grouped by the four elements (Earth, Fire, Water, Air).\n- **Turn Information:** Displays current player's turn and any special actions performed.\n- **Player Order:** Sequence in which players take turns, visible to all.\n\n#### **Player-Specific Information:**\n- **Public**:\n    - **Visible Runes:** Runes played on the sacred board.\n    - **Confluences:** Completed Confluence Spells and drawn new runes.\n- **Private**:\n    - **Player Hand:** Runes (cards) held by a player, only visible to them.\n    - **Mana Chips:** Number of mana chips in the player's possession.\n\n---\n\n### 2. **Card**\n\n#### **Attributes:**\n- **Rank:** One of {K, Q, J, 10, 9, 8, 7, 6, 5, 4, 3, 2, A}.\n- **Elemental Suit:** One of {Earth, Fire, Water, Air}.\n- **Special Abilities:**\n  - **Seven Rune:** Allows merge actions or special plays.\n  - **Fusion Power:** Created through merge actions, can be part of a Confluence Spell.\n\n#### **Card States:**\n- **Face-down:** Cards in the player\u2019s hand.\n- **Face-up:** Runes played on the sacred board.\n\n---\n\n### 3. **Deck and Initial Dealing**\n\n#### **Deck Composition:**\n- A standard deck with 52 runes (4 elements, 13 ranks each, following traditional card ranks).\n\n#### **Initial Dealing:**\n- Each player receives 7 runes.\n- Players with fewer cards must ante an additional mana chip.\n- Remaining runes form a mystical reserve (deck).\n\n---\n\n### 4. **Legal Action Space**\n\n#### **On a Turn, a Player May:**\n1. **Play a Rune:**\n   - Place a rune in alignment with previously played runes of the same element by rank or complete a sequence.\n2. **Use Merge Action:**\n   - Merge two adjacent runes of the same element to form a more powerful rune.\n   - Outcome: Draw a new rune from the mystical reserve.\n3. **Create a Confluence Spell:**\n   - Complete a sequence of four consecutive runes including a merged rune. \n   - Outcome: Reinforce ability to draw and play more effectively.\n4. **Aid an Opponent:**\n   - Donate a rune to another player strategically.\n   - Pre-requisite: Consider impact on game balance.\n5. **Pass:**\n   - Skip playing a rune.\n   - Consequence: Contribute mana chips to the pool for missed opportunities.\n\n---\n\n### 5. **Round**\n\n#### **Sequence of Play:**\n1. The player to the left of the dealer initiates the round.\n2. Players take turns in clockwise order.\n3. Each turn involves:\n   - Playing a rune or using a merge action.\n   - Optionally assisting another player with a rune donation.\n   - Passing if no action is chosen, incurring a mana penalty.\n4. Play continues until:\n   - A player successfully merges all their runes.\n   - OR a player reaches 100 points due to unplayed runes.\n\n#### **Winning Conditions:**\n- The game ends when a player's score surpasses 100.\n- The player with the fewest points is the overall winner, declared Master Sorcerer.\n\n---\n\n### 6. **Other Game Mechanics & Rules**\n\n- **Passing Penalty:** Missing a chance to play or merge costs players three mana chips.\n- **Seven Rune Penalty:** Missing the opportunity with a seven rune incurs a five-mana chip distribution to players holding adjacent key runes.\n- **Cooperative Dynamics:** Players can form temporary alliances to balance game dynamics and hinder leading players.\n- **Deck Reformation:** If runes are depleted, discarded runes (except those on the board) are reshuffled back into the reserve.\n\n---\n\n### 7. **Player Observation Information**\n\n#### **Visible Information to Each Player:**\n- Their own runes.\n- The sacred board's top rune.\n- Confluence Spells completed by all players.\n- Mana chips in the energy pool.\n- Actions performed by other players.\n\n#### **Hidden Information:**\n- Runes in the reserve deck.\n- Runes held by opponents.\n- Other players' mana chip totals.\n\n---\n\n### 8. **Payoffs**\n\n#### **Endgame Scoring:**\n- Players accrue points from unplayed runes left in their hand at round\u2019s end.\n- Each unplayed rune is worth 1 point.\n\n#### **Winning Player\u2019s Reward:**\n- The player with the lowest score after 100 points is reached is declared the Master Sorcerer, winning the game.\n\n#### **Tie Resolution:**\n- If the score is tied, the player with fewer unplayed runes in hand at the end is declared the winner.",
    "input_description": "Example: \n{\"common\": {\"num_players\": 4, \"current_player\": 2, \"winner\": null, \"is_over\": false, \"energy_pool\": 4, \"sacred_board\": {\"Earth\": [], \"Fire\": [], \"Water\": [{\"rank\": \"J\", \"element\": \"Water\"}], \"Air\": []}, \"player_order\": [0, 1, 2, 3], \"faceup_cards\": {\"completed_confluences\": []}, \"facedown_cards\": {\"mystical_reserve_size\": 24}}, \"players\": [{\"public\": {\"visible_runes\": [{\"rank\": \"J\", \"element\": \"Water\"}], \"confluences\": []}}, {\"public\": {\"visible_runes\": [], \"confluences\": []}}, {\"public\": {\"visible_runes\": [], \"confluences\": [], \"current_player\": true}, \"private\": {\"hand\": [{\"rank\": \"8\", \"element\": \"Air\"}, {\"rank\": \"6\", \"element\": \"Water\"}, {\"rank\": \"5\", \"element\": \"Air\"}, {\"rank\": \"J\", \"element\": \"Air\"}, {\"rank\": \"K\", \"element\": \"Fire\"}, {\"rank\": \"5\", \"element\": \"Water\"}, {\"rank\": \"3\", \"element\": \"Air\"}, {\"rank\": \"Q\", \"element\": \"Air\"}], \"mana_chips\": 5}}, {\"public\": {\"visible_runes\": [], \"confluences\": []}}], \"recent_history\": [{\"type\": \"action\", \"player_id\": 2, \"action\": {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 0, \"rune_idx\": 3}, \"id\": 21}, \"msg\": \"Player 2 decides to: aid_opponent-(target_player: 0, rune_idx: 3)\"}, {\"type\": \"info\", \"msg\": \"Player 2 aids Player 0 with 9-Air.\", \"role\": null}, {\"type\": \"info\", \"msg\": \"Next player's turn: Player 3.\", \"role\": null}, {\"type\": \"turn_end\", \"player_id\": 2, \"msg\": \"---------- End of Player 2's turn ----------\"}, {\"type\": \"action\", \"player_id\": 3, \"action\": {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 2, \"rune_idx\": 3}, \"id\": 23}, \"msg\": \"Player 3 decides to: aid_opponent-(target_player: 2, rune_idx: 3)\"}, {\"type\": \"info\", \"msg\": \"Player 3 aids Player 2 with 3-Air.\", \"role\": null}, {\"type\": \"info\", \"msg\": \"Next player's turn: Player 0.\", \"role\": null}, {\"type\": \"turn_end\", \"player_id\": 3, \"msg\": \"---------- End of Player 3's turn ----------\"}, {\"type\": \"action\", \"player_id\": 0, \"action\": {\"action\": \"pass\", \"args\": {}, \"id\": 35}, \"msg\": \"Player 0 decides to: pass-()\"}, {\"type\": \"info\", \"msg\": \"Player 0 passes and contributes 3 mana chips to the energy pool.\", \"role\": null}, {\"type\": \"info\", \"msg\": \"Next player's turn: Player 1.\", \"role\": null}, {\"type\": \"turn_end\", \"player_id\": 0, \"msg\": \"---------- End of Player 0's turn ----------\"}, {\"type\": \"action\", \"player_id\": 1, \"action\": {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 2, \"rune_idx\": 1}, \"id\": 14}, \"msg\": \"Player 1 decides to: aid_opponent-(target_player: 2, rune_idx: 1)\"}, {\"type\": \"info\", \"msg\": \"Player 1 aids Player 2 with Q-Air.\", \"role\": null}, {\"type\": \"info\", \"msg\": \"Next player's turn: Player 2.\", \"role\": null}], \"legal_actions\": [{\"action\": \"play_rune\", \"args\": {\"rune_idx\": 0}, \"id\": 0}, {\"action\": \"play_rune\", \"args\": {\"rune_idx\": 2}, \"id\": 1}, {\"action\": \"play_rune\", \"args\": {\"rune_idx\": 3}, \"id\": 2}, {\"action\": \"play_rune\", \"args\": {\"rune_idx\": 4}, \"id\": 3}, {\"action\": \"play_rune\", \"args\": {\"rune_idx\": 6}, \"id\": 4}, {\"action\": \"play_rune\", \"args\": {\"rune_idx\": 7}, \"id\": 5}, {\"action\": \"merge_runes\", \"args\": {\"rune_indices\": [0, 2]}, \"id\": 6}, {\"action\": \"merge_runes\", \"args\": {\"rune_indices\": [0, 3]}, \"id\": 7}, {\"action\": \"merge_runes\", \"args\": {\"rune_indices\": [0, 6]}, \"id\": 8}, {\"action\": \"merge_runes\", \"args\": {\"rune_indices\": [0, 7]}, \"id\": 9}, {\"action\": \"merge_runes\", \"args\": {\"rune_indices\": [2, 3]}, \"id\": 10}, {\"action\": \"merge_runes\", \"args\": {\"rune_indices\": [2, 6]}, \"id\": 11}, {\"action\": \"merge_runes\", \"args\": {\"rune_indices\": [2, 7]}, \"id\": 12}, {\"action\": \"merge_runes\", \"args\": {\"rune_indices\": [3, 6]}, \"id\": 13}, {\"action\": \"merge_runes\", \"args\": {\"rune_indices\": [3, 7]}, \"id\": 14}, {\"action\": \"merge_runes\", \"args\": {\"rune_indices\": [6, 7]}, \"id\": 15}, {\"action\": \"merge_runes\", \"args\": {\"rune_indices\": [1, 5]}, \"id\": 16}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 0, \"rune_idx\": 0}, \"id\": 17}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 1, \"rune_idx\": 0}, \"id\": 18}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 3, \"rune_idx\": 0}, \"id\": 19}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 0, \"rune_idx\": 1}, \"id\": 20}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 1, \"rune_idx\": 1}, \"id\": 21}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 3, \"rune_idx\": 1}, \"id\": 22}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 0, \"rune_idx\": 2}, \"id\": 23}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 1, \"rune_idx\": 2}, \"id\": 24}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 3, \"rune_idx\": 2}, \"id\": 25}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 0, \"rune_idx\": 3}, \"id\": 26}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 1, \"rune_idx\": 3}, \"id\": 27}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 3, \"rune_idx\": 3}, \"id\": 28}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 0, \"rune_idx\": 4}, \"id\": 29}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 1, \"rune_idx\": 4}, \"id\": 30}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 3, \"rune_idx\": 4}, \"id\": 31}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 0, \"rune_idx\": 5}, \"id\": 32}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 1, \"rune_idx\": 5}, \"id\": 33}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 3, \"rune_idx\": 5}, \"id\": 34}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 0, \"rune_idx\": 6}, \"id\": 35}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 1, \"rune_idx\": 6}, \"id\": 36}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 3, \"rune_idx\": 6}, \"id\": 37}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 0, \"rune_idx\": 7}, \"id\": 38}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 1, \"rune_idx\": 7}, \"id\": 39}, {\"action\": \"aid_opponent\", \"args\": {\"target_player\": 3, \"rune_idx\": 7}, \"id\": 40}, {\"action\": \"pass\", \"args\": {}, \"id\": 41}]}\n\nExplanation: \n{\"common\": \"An object holding shared game state information relevant to all players.\", \"common.num_players\": \"The number of players participating in the game. It is an integer.\", \"common.current_player\": \"The index of the player whose turn it currently is. It is an integer.\", \"common.winner\": \"Indicates the index of the winning player if the game is over, or null if there is no winner yet.\", \"common.is_over\": \"A boolean indicating whether the game has concluded.\", \"common.energy_pool\": \"Tracks the total number of mana chips contributed to the central pool. It is an integer.\", \"common.sacred_board\": \"An object storing arrays of runes currently played on the board, categorized by their elements (Earth, Fire, Water, Air).\", \"common.player_order\": \"A list of player indices representing the order of play.\", \"common.faceup_cards\": \"An object containing notably visible cards on the board.\", \"common.faceup_cards.completed_confluences\": \"An array tracking the indices of players who completed confluence spells.\", \"common.facedown_cards\": \"An object containing cards that are not currently visible to players.\", \"common.facedown_cards.mystical_reserve_size\": \"An integer representing the number of remaining runes in the mystical reserve deck.\", \"players\": \"An array containing objects for each player, which includes public and private information.\", \"players[].public.visible_runes\": \"An array containing runes that the player has played visibly on the board.\", \"players[].public.confluences\": \"An array listing the confluence spells a player has completed.\", \"players[].public.current_player\": \"A boolean indicating true when this is the current player's turn.\", \"players[].private.hand\": \"An array representing the runes currently held in the player's hand.\", \"players[].private.mana_chips\": \"The number of mana chips currently held by the player.\", \"recent_history\": \"A list of recent actions and events in the game, with details like type, player, action, and message.\", \"recent_history[].type\": \"The category of event, such as 'action', 'info', or 'turn_end'.\", \"recent_history[].player_id\": \"The index of the player associated with the event or action.\", \"recent_history[].action\": \"Details of a specific action taken, including type and any arguments.\", \"recent_history[].msg\": \"A message string describing the action or event for human readability.\", \"legal_actions\": \"An array of dictionaries detailing all legal actions available to the current player.\", \"legal_actions[].action\": \"The type of action that can be taken ('play_rune', 'merge_runes', etc.).\", \"legal_actions[].args\": \"Arguments necessary for the action, specific to the type of action, such as 'rune_idx' or 'target_player'.\", \"legal_actions[].id\": \"A unique identifier for the legal action, usually for tracking purposes.\"}",
    "policy_list": [
        "**Board Alignment Potential**\nEvaluates how well a player's current hand cards align with the visible runes on the sacred board. A high score indicates potential for immediate play or sequence completion.\n**Merge Opportunity Score**\nAssesses the potential to execute merge actions on the player's next turn by considering adjacent runes of the same element in hand. This metric encourages strategic planning for drawing additional runes.\n**Confluence Spell Readiness**\nMeasures how close the player is to completing a Confluence Spell by evaluating the proximity and sequence of playable runes in hand, including potential merges required.\n**Mana Efficiency Ratio**\nDetermines the efficiency of the player's actions relative to their mana chip expenditures. A higher score implies maintaining a lower penalty cost and strategically using or conserving mana.\n**Efficient Rune Management**\nPrioritize playing or merging high-ranking runes to minimize future penalty points, while maintaining a focus on creating Confluence Spells.\n**Strategic Rune Donation**\nOccasionally donate a strategic rune to an opponent to disrupt their strategy or to form temporary alliances against leading players.\n**Aggressive Merge and Draw**\nFocus on merge actions to continually replenish the hand with fresh runes from the mystical reserve and create higher potential for powerful plays.\n**Controlled Passing for Mana Management**\nPass strategically to conserve valuable runes, while calculating the trade-off with mana chips lost to the pool."
    ],
    "code": [
        "\ndef score(state: dict, action: dict) -> float:\n    def calculate_board_alignment_potential(player_hand, sacred_board):\n        score = 0\n        for card in player_hand:\n            element_runes = sacred_board[card['element']]\n            if any(rune['rank'] == card['rank'] for rune in element_runes):\n                score += 1\n        return score / len(player_hand) if player_hand else 0\n\n    def calculate_merge_opportunity_score(player_hand):\n        score = 0\n        element_groups = {}\n        for card in player_hand:\n            if card['element'] not in element_groups:\n                element_groups[card['element']] = []\n            element_groups[card['element']].append(card['rank'])\n        \n        for ranks in element_groups.values():\n            ranks.sort()\n            for i in range(len(ranks) - 1):\n                if ranks[i + 1] == ranks[i]:\n                    score += 1\n        return score / len(player_hand) if player_hand else 0\n\n    def calculate_confluence_spell_readiness(player_hand):\n        score = 0\n        # Simply count cards as proxy for readiness to complete sequences\n        rune_count = len(player_hand)\n        score = rune_count / 7 if rune_count else 0\n        return score\n\n    def calculate_mana_efficiency_ratio(mana_chips, energy_pool):\n        if energy_pool:\n            return mana_chips / (mana_chips + energy_pool)\n        return 0\n\n    def calculate_efficient_rune_management(player_hand):\n        high_ranks = {'A', 'K', 'Q', 'J', '10'}\n        score = sum(1 for card in player_hand if card['rank'] in high_ranks)\n        return score / len(player_hand) if player_hand else 0\n\n    common = state[\"common\"]\n    current_player_data = state[\"players\"][common[\"current_player\"]]\n    player_hand = current_player_data[\"private\"][\"hand\"]\n    mana_chips = current_player_data[\"private\"][\"mana_chips\"]\n    \n    board_alignment_score = calculate_board_alignment_potential(player_hand, common[\"sacred_board\"])\n    merge_opportunity_score = calculate_merge_opportunity_score(player_hand)\n    confluence_spell_readiness = calculate_confluence_spell_readiness(player_hand)\n    mana_efficiency = calculate_mana_efficiency_ratio(mana_chips, common[\"energy_pool\"])\n    rune_management = calculate_efficient_rune_management(player_hand)\n\n    # Adjust scores according to the selected action:   \n    action_type = action[\"action\"]\n    action_value = 0\n    \n    if action_type == \"play_rune\":\n        action_value = board_alignment_score * 0.4 + mana_efficiency * 0.3 + rune_management * 0.3\n    elif action_type == \"merge_runes\":\n        action_value = merge_opportunity_score * 0.5 + confluence_spell_readiness * 0.5\n    elif action_type == \"aid_opponent\":\n        action_value = board_alignment_score * 0.2 + mana_efficiency * 0.4 + rune_management * 0.4\n    elif action_type == \"pass\":\n        action_value = mana_efficiency * 0.7 + rune_management * 0.3\n\n    # Combine basic metrics with specifics of the action\n    result_score = 0.5 * (board_alignment_score + \n                         merge_opportunity_score + \n                         confluence_spell_readiness + \n                         mana_efficiency + \n                         rune_management) / 5 + 0.5 * action_value\n\n    return min(max(result_score, 0), 1)\n"
    ]
}