{
    "game_description": "## Card Merge Challenge: Refined Ruleset\n\n### 1. **Game State**\n\n#### **Common Information:**\n- **Stock Pile:** Cards remaining in the draw pile.\n- **Starter Pile:** Top card visible to all players.\n- **Player Order:** Determined at the beginning of the game, visible to all.\n\n#### **Player-Specific Information:**\n- **Public:**\n  - **Merged Sequences:** Sequences successfully completed by all players and visible to all.\n  - **Scoreboard:** Cumulative points of each player.\n- **Private:**\n  - **Player Hand:** Cards held by each player, visible only to themselves.\n\n---\n\n### 2. **Card**\n\n#### **Attributes:**\n- **Rank:** One of {A, 2, 3, 4, 5, 6, 7, 9, 10, J, Q, K}.\n- **Suit:** One of {Hearts, Diamonds, Clubs, Spades}.\n- **Unique Symbol:** A special symbol on each card for merging purposes.\n- **Special Card:** Eight acts as a wild card for both suit and symbol changes.\n\n---\n\n### 3. **Deck and Initial Dealing**\n\n#### **Deck Composition:**\n- A standard 52-card deck with additional unique symbols on each card.\n\n#### **Initial Dealing:**\n- Deal five cards face down to each player.\n- Remaining cards form the stock pile.\n- Top card of the stock pile is turned up to start the starter pile. If this is an eight, it is inserted into the deck, and another card is drawn.\n\n---\n\n### 4. **Legal Action Space**\n\n#### **On a Turn, a Player May:**\n1. **Play a Card:**\n   - Place one card from their hand on the starter pile.\n   - Prerequisite: The card must match the top card by rank, suit, or symbol.\n2. **Merge Sequence:**\n   - Create a sequence with the top card of the starter pile combined with cards from the player's hand.\n   - Required: Sequence of three or more cards sharing a common symbol.\n   - Additional Rule: Only one merged sequence can be created per turn.\n3. **Use Wild Card (Eight):**\n   - Play an eight to change suit and symbol trajectory.\n4. **Draw a Card:**\n   - Draw from the stock if they can\u2019t play, OR opt to strategically draw despite alternatives.\n   - Prerequisite: No matching card in hand, or by strategic choice.\n\n---\n\n### 5. **Round**\n\n#### **Sequence of Play:**\n1. Player left of the dealer starts.\n2. Turns proceed in clockwise order.\n3. During a turn, a player:\n   - Plays a card or merges.\n   - Draws a card (if needed).\n   - The turn ends and passes to the next player.\n4. Play continues until:\n   - A player reaches 150 points through merges and regular gameplay.\n\n#### **Winning Conditions:**\n- A player wins upon reaching 150 points through successful merges and card play.\n\n---\n\n### 6. **Other Game Mechanics & Rules**\n\n- **Merge Bonus:** Successfully merging a sequence grants a 10-point bonus per card in the sequence.\n- **Wild Card Usage:** Eights alter game flow, allowing suit and symbol changes for new sequence formation.\n- **Score Recording:** Results recorded across up to four ongoing games, scoring detailed sequentially.\n\n---\n\n### 7. **Player Observation Information**\n\n#### **Visible Information to Each Player:**\n- The top card of the starter pile.\n- Merged sequences on the table.\n- Cumulative scores of all players.\n\n#### **Hidden Information:**\n- Identity of cards in the stock pile.\n- Cards in opponents' hands.\n\n---\n\n### 8. **Payoffs**\n\n#### **Endgame Scoring:**\n- Points awarded for each merged sequence:\n  - Each successful merge contributes to the score based on the number of cards in the sequence.\n  - Align scoring with the traditional logic: Face cards = 10 points; Eights = 20 points; Ace = 15 points; Numbered cards = Pip value.\n\n#### **Objective Achievement:**\n- Game winner is the first to score 150 points through strategic merging and regular gameplay, leveraging visible and hidden game states smartly.\n\nThis refined description ensures the gameplay mechanics are well-aligned with the new merging objective and special card function, providing clarity and ensuring strategic depth.",
    "input_description": "Example: \n{\"common\": {\"num_players\": 4, \"current_player\": 2, \"winner\": null, \"is_over\": false, \"starter_pile\": {\"top_card\": {\"rank\": \"8\", \"suit\": \"diamonds\", \"symbol\": \"8\"}}, \"facedown_cards\": {\"stock_size\": 29}, \"discard_pile\": [{\"rank\": \"J\", \"suit\": \"spades\", \"symbol\": \"J\"}, {\"rank\": \"J\", \"suit\": \"hearts\", \"symbol\": \"J\"}, {\"rank\": \"2\", \"suit\": \"hearts\", \"symbol\": \"2\"}, {\"rank\": \"Q\", \"suit\": \"hearts\", \"symbol\": \"Q\"}]}, \"players\": [{\"public\": {\"score\": 0, \"merged_sequences\": []}, \"facedown_cards\": {\"hand_size\": 3}}, {\"public\": {\"score\": 0, \"merged_sequences\": []}, \"facedown_cards\": {\"hand_size\": 7}}, {\"public\": {\"score\": 0, \"merged_sequences\": [], \"current_player\": true}, \"facedown_cards\": {\"hand\": [{\"rank\": \"K\", \"suit\": \"clubs\", \"symbol\": \"K\"}, {\"rank\": \"6\", \"suit\": \"hearts\", \"symbol\": \"6\"}, {\"rank\": \"7\", \"suit\": \"spades\", \"symbol\": \"7\"}, {\"rank\": \"Q\", \"suit\": \"diamonds\", \"symbol\": \"Q\"}]}}, {\"public\": {\"score\": 0, \"merged_sequences\": []}, \"facedown_cards\": {\"hand_size\": 4}}], \"recent_history\": [{\"type\": \"action\", \"player_id\": 2, \"action\": {\"action\": \"play\", \"args\": {\"card_idx\": 0}, \"id\": 0}, \"msg\": \"Player 2 decides to: play-(card_idx: 0)\"}, {\"type\": \"info\", \"msg\": \"Player 2 plays 2-hearts-2 onto the starter pile.\", \"role\": null}, {\"type\": \"turn_end\", \"player_id\": 2, \"msg\": \"---------- End of Player 2's turn ----------\"}, {\"type\": \"action\", \"player_id\": 3, \"action\": {\"action\": \"play\", \"args\": {\"card_idx\": 1}, \"id\": 0}, \"msg\": \"Player 3 decides to: play-(card_idx: 1)\"}, {\"type\": \"info\", \"msg\": \"Player 3 plays Q-hearts-Q onto the starter pile.\", \"role\": null}, {\"type\": \"turn_end\", \"player_id\": 3, \"msg\": \"---------- End of Player 3's turn ----------\"}, {\"type\": \"action\", \"player_id\": 0, \"action\": {\"action\": \"use_wild\", \"args\": {\"card_idx\": 1, \"new_suit\": \"spades\"}, \"id\": 3}, \"msg\": \"Player 0 decides to: use_wild-(card_idx: 1, new_suit: spades)\"}, {\"type\": \"info\", \"msg\": \"Player 0 uses a wild card to change the suit to spades.\", \"role\": null}, {\"type\": \"turn_end\", \"player_id\": 0, \"msg\": \"---------- End of Player 0's turn ----------\"}, {\"type\": \"action\", \"player_id\": 1, \"action\": {\"action\": \"draw\", \"id\": 0}, \"msg\": \"Player 1 decides to: draw\"}, {\"type\": \"info\", \"msg\": \"Player 1 draws a card from the stock.\", \"role\": null}], \"legal_actions\": [{\"action\": \"play\", \"args\": {\"card_idx\": 2}, \"id\": 0}]}\n\nExplanation: \n{\"common\": \"A section storing information shared among all players.\", \"common.num_players\": \"The total number of players in the game.\", \"common.current_player\": \"The index of the player whose turn it is currently.\", \"common.winner\": \"The index of the player who has won the game, if the game is over; otherwise null.\", \"common.is_over\": \"A boolean indicating if the game has ended.\", \"common.starter_pile\": \"A section storing details of the pile where the top card is placed.\", \"common.starter_pile.top_card\": \"The top card of the starter pile, represented as a dictionary with rank, suit, and symbol.\", \"common.facedown_cards\": \"A section containing facedown cards not visible to players, like the stock of available cards.\", \"common.facedown_cards.stock_size\": \"The number of cards remaining in the stock.\", \"common.discard_pile\": \"A list of cards that have been played and discarded from the starter pile.\", \"players\": \"An array where each element holds details about a specific player.\", \"players[].public\": \"Information visible to all players for each specific player.\", \"players[].public.score\": \"The total score of the player.\", \"players[].public.merged_sequences\": \"A list of sequences of cards the player has successfully merged.\", \"players[].facedown_cards\": \"Details of the cards a player holds in their hand.\", \"players[].facedown_cards.hand_size\": \"The number of cards in a player's hand when the actual cards aren't provided.\", \"players[].facedown_cards.hand\": \"A list of cards held by the current player, visible in detail.\", \"recent_history\": \"A list of recent actions taken in the game, presented chronologically.\", \"recent_history[].type\": \"The type of event recorded in the history, such as 'action', 'info', or 'turn_end'.\", \"recent_history[].player_id\": \"The index of the player executing the action or event being recorded.\", \"recent_history[].action\": \"Details of the action taken by a player, including the action type and any necessary arguments.\", \"recent_history[].msg\": \"A message describing the action or event in prose.\", \"recent_history[].role\": \"Typically null in this context, but might reference who's affected by an action in other instances.\", \"legal_actions\": \"A list of the actions currently available to the current player.\", \"legal_actions[].action\": \"The type of action a player can take, e.g., 'play', 'draw'.\", \"legal_actions[].args\": \"Any arguments necessary to perform the action, such as indices for card selection.\"}",
    "policy_list": [
        "**Potential Merge Value**\nThis metric evaluates the potential points that can be gained from merging a sequence using the top card of the starter pile and cards in hand. It considers the number of cards in the sequence and their corresponding point values. Higher values indicate a more valuable merging opportunity.\n**Avoidance Risk Factor**\nThis metric measures the risk of not being able to play a card on subsequent turns by evaluating the diversity and flexibility of the player's hand. A higher risk factor indicates a higher chance of getting stuck, prompting the player to draw more strategically.\n**Wild Card Utility**\nThis metric assesses the strategic utility of playing an eight as a wild card to change the suit and symbol heading of the game. It is calculated based on how many potential sequences the player can create or disrupt using the wild card.\n**Opponent Interference Potential**\nThis metric evaluates the likelihood that a play can interfere with opponents' strategies. It considers factors such as the frequency of specific ranks, suits, or symbols in previously played cards, estimating the disruption it would cause to other players' potential merges.\n**Maximize Merging Opportunities**\nFocus on forming merged sequences by holding and strategically playing cards with matching symbols, especially when the top card of the starter pile can complete or start a merge sequence.\n**Control with Wild Cards**\nUtilize eights to change suits and symbols proactively, either to facilitate your own future merges or to disrupt potential merges by opponents. Retain wild cards until they can maximize disruption or create opportunity.\n**Adaptive Card Matching**\nAdaptively play cards that maintain flexibility in hand, focusing on maintaining a range of ranks, suits, and symbols to ensure future plays and potential merges. Prioritize discarding cards with less utility to your strategy.\n**Strategic Drawing**\nChoose to draw cards strategically, even when a play is possible, to accumulate cards needed for potential future merges or to obtain a more favorable hand configuration."
    ],
    "code": [
        "\ndef score(state: dict, action: dict) -> float:\n    # Helper function to calculate card point value\n    def card_value(card):\n        if card['rank'] == 'A':\n            return 15\n        elif card['rank'] in ['K', 'Q', 'J']:\n            return 10\n        elif card['rank'] == '8':\n            return 20\n        else:\n            return int(card['rank'])\n\n    # Extract data from the state\n    players = state['players']\n    current_player_idx = state['common']['current_player']\n    current_player = players[current_player_idx]\n    current_hand = current_player['facedown_cards']['hand']\n    top_card = state['common']['starter_pile']['top_card']\n    legal_actions = state['legal_actions']\n\n    # Evaluate Potential Merge Value\n    potential_merge_value = 0\n    if action['action'] == 'play':\n        card_to_play = current_hand[action['args']['card_idx']]\n        if card_to_play['symbol'] == top_card['symbol']:\n            # Calculate potential points from merging with the top card\n            sequence_cards = [card for card in current_hand if card['symbol'] == top_card['symbol']]\n            merge_length = len(sequence_cards) + 1\n            potential_merge_value = sum(card_value(card) for card in sequence_cards) + card_value(top_card)\n            potential_merge_value *= (1 + 0.1 * merge_length)\n\n    # Evaluate Avoidance Risk Factor\n    hand_diversity = len(set((card['rank'], card['suit'], card['symbol']) for card in current_hand))\n    avoidance_risk_factor = 1 / (1 + hand_diversity)  # Higher diversity implies lower risk\n\n    # Evaluate Wild Card Utility\n    wild_card_utility = 0\n    if any(card['rank'] == '8' for card in current_hand):\n        wild_card_utility = len(current_hand) / len(legal_actions)\n\n    # Evaluate Opponent Interference Potential\n    opponent_interference_potential = 0\n    for player in players:\n        if player is not current_player:\n            interference_cards = [card for card in current_hand if card['rank'] == top_card['rank'] or card['suit'] == top_card['suit']]\n            opponent_interference_potential += len(interference_cards)\n\n    # Weighing the functional components into a final score\n    result_score = (\n        (0.35 * potential_merge_value / 100) +\n        (0.25 * (1 - avoidance_risk_factor)) +\n        (0.2 * wild_card_utility) +\n        (0.2 * opponent_interference_potential / 10)  # Assuming 10 is a typical scenario for interference cards\n    )\n\n    # Ensure the result is between 0 and 1\n    result_score = min(max(result_score, 0), 1)\n    \n    return result_score\n"
    ]
}